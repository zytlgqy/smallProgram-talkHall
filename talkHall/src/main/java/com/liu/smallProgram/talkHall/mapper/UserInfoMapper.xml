<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liu.smallProgram.talkHall.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.liu.smallProgram.talkHall.model.UserInfo" >
    <id column="user_info_id" property="userInfoId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name_real" property="userNameReal" jdbcType="VARCHAR" />
    <result column="user_name_nick" property="userNameNick" jdbcType="VARCHAR" />
    <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR" />
    <result column="user_gender" property="userGender" jdbcType="INTEGER" />
    <result column="user_age" property="userAge" jdbcType="INTEGER" />
    <result column="user_personalized_signature" property="userPersonalizedSignature" jdbcType="VARCHAR" />
    <result column="user_self_introduce" property="userSelfIntroduce" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_qq" property="userQq" jdbcType="VARCHAR" />
    <result column="user_wechat" property="userWechat" jdbcType="VARCHAR" />
    <result column="user_department_belongs" property="userDepartmentBelongs" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="late_update_time" property="lateUpdateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_info_id, user_id, user_name_real, user_name_nick, user_avatar, user_gender, 
    user_age, user_personalized_signature, user_self_introduce, user_phone, user_qq, 
    user_wechat, user_department_belongs, create_time, late_update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.liu.smallProgram.talkHall.model.UserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where user_info_id = #{userInfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where user_info_id = #{userInfoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.liu.smallProgram.talkHall.model.UserInfoExample" >
    delete from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liu.smallProgram.talkHall.model.UserInfo" >
    insert into user_info (user_info_id, user_id, user_name_real, 
      user_name_nick, user_avatar, user_gender, 
      user_age, user_personalized_signature, user_self_introduce, 
      user_phone, user_qq, user_wechat, 
      user_department_belongs, create_time, late_update_time
      )
    values (#{userInfoId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userNameReal,jdbcType=VARCHAR}, 
      #{userNameNick,jdbcType=VARCHAR}, #{userAvatar,jdbcType=VARCHAR}, #{userGender,jdbcType=INTEGER}, 
      #{userAge,jdbcType=INTEGER}, #{userPersonalizedSignature,jdbcType=VARCHAR}, #{userSelfIntroduce,jdbcType=VARCHAR}, 
      #{userPhone,jdbcType=VARCHAR}, #{userQq,jdbcType=VARCHAR}, #{userWechat,jdbcType=VARCHAR}, 
      #{userDepartmentBelongs,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{lateUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liu.smallProgram.talkHall.model.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userInfoId != null" >
        user_info_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userNameReal != null" >
        user_name_real,
      </if>
      <if test="userNameNick != null" >
        user_name_nick,
      </if>
      <if test="userAvatar != null" >
        user_avatar,
      </if>
      <if test="userGender != null" >
        user_gender,
      </if>
      <if test="userAge != null" >
        user_age,
      </if>
      <if test="userPersonalizedSignature != null" >
        user_personalized_signature,
      </if>
      <if test="userSelfIntroduce != null" >
        user_self_introduce,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="userQq != null" >
        user_qq,
      </if>
      <if test="userWechat != null" >
        user_wechat,
      </if>
      <if test="userDepartmentBelongs != null" >
        user_department_belongs,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lateUpdateTime != null" >
        late_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userInfoId != null" >
        #{userInfoId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userNameReal != null" >
        #{userNameReal,jdbcType=VARCHAR},
      </if>
      <if test="userNameNick != null" >
        #{userNameNick,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null" >
        #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null" >
        #{userGender,jdbcType=INTEGER},
      </if>
      <if test="userAge != null" >
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userPersonalizedSignature != null" >
        #{userPersonalizedSignature,jdbcType=VARCHAR},
      </if>
      <if test="userSelfIntroduce != null" >
        #{userSelfIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null" >
        #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userWechat != null" >
        #{userWechat,jdbcType=VARCHAR},
      </if>
      <if test="userDepartmentBelongs != null" >
        #{userDepartmentBelongs,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lateUpdateTime != null" >
        #{lateUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liu.smallProgram.talkHall.model.UserInfoExample" resultType="java.lang.Integer" >
    select count(*) from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_info
    <set >
      <if test="record.userInfoId != null" >
        user_info_id = #{record.userInfoId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userNameReal != null" >
        user_name_real = #{record.userNameReal,jdbcType=VARCHAR},
      </if>
      <if test="record.userNameNick != null" >
        user_name_nick = #{record.userNameNick,jdbcType=VARCHAR},
      </if>
      <if test="record.userAvatar != null" >
        user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.userGender != null" >
        user_gender = #{record.userGender,jdbcType=INTEGER},
      </if>
      <if test="record.userAge != null" >
        user_age = #{record.userAge,jdbcType=INTEGER},
      </if>
      <if test="record.userPersonalizedSignature != null" >
        user_personalized_signature = #{record.userPersonalizedSignature,jdbcType=VARCHAR},
      </if>
      <if test="record.userSelfIntroduce != null" >
        user_self_introduce = #{record.userSelfIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhone != null" >
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userQq != null" >
        user_qq = #{record.userQq,jdbcType=VARCHAR},
      </if>
      <if test="record.userWechat != null" >
        user_wechat = #{record.userWechat,jdbcType=VARCHAR},
      </if>
      <if test="record.userDepartmentBelongs != null" >
        user_department_belongs = #{record.userDepartmentBelongs,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lateUpdateTime != null" >
        late_update_time = #{record.lateUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_info
    set user_info_id = #{record.userInfoId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name_real = #{record.userNameReal,jdbcType=VARCHAR},
      user_name_nick = #{record.userNameNick,jdbcType=VARCHAR},
      user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      user_gender = #{record.userGender,jdbcType=INTEGER},
      user_age = #{record.userAge,jdbcType=INTEGER},
      user_personalized_signature = #{record.userPersonalizedSignature,jdbcType=VARCHAR},
      user_self_introduce = #{record.userSelfIntroduce,jdbcType=VARCHAR},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      user_qq = #{record.userQq,jdbcType=VARCHAR},
      user_wechat = #{record.userWechat,jdbcType=VARCHAR},
      user_department_belongs = #{record.userDepartmentBelongs,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      late_update_time = #{record.lateUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liu.smallProgram.talkHall.model.UserInfo" >
    update user_info
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userNameReal != null" >
        user_name_real = #{userNameReal,jdbcType=VARCHAR},
      </if>
      <if test="userNameNick != null" >
        user_name_nick = #{userNameNick,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null" >
        user_avatar = #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null" >
        user_gender = #{userGender,jdbcType=INTEGER},
      </if>
      <if test="userAge != null" >
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userPersonalizedSignature != null" >
        user_personalized_signature = #{userPersonalizedSignature,jdbcType=VARCHAR},
      </if>
      <if test="userSelfIntroduce != null" >
        user_self_introduce = #{userSelfIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null" >
        user_qq = #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userWechat != null" >
        user_wechat = #{userWechat,jdbcType=VARCHAR},
      </if>
      <if test="userDepartmentBelongs != null" >
        user_department_belongs = #{userDepartmentBelongs,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lateUpdateTime != null" >
        late_update_time = #{lateUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_info_id = #{userInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liu.smallProgram.talkHall.model.UserInfo" >
    update user_info
    set user_id = #{userId,jdbcType=INTEGER},
      user_name_real = #{userNameReal,jdbcType=VARCHAR},
      user_name_nick = #{userNameNick,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=VARCHAR},
      user_gender = #{userGender,jdbcType=INTEGER},
      user_age = #{userAge,jdbcType=INTEGER},
      user_personalized_signature = #{userPersonalizedSignature,jdbcType=VARCHAR},
      user_self_introduce = #{userSelfIntroduce,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_qq = #{userQq,jdbcType=VARCHAR},
      user_wechat = #{userWechat,jdbcType=VARCHAR},
      user_department_belongs = #{userDepartmentBelongs,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      late_update_time = #{lateUpdateTime,jdbcType=TIMESTAMP}
    where user_info_id = #{userInfoId,jdbcType=INTEGER}
  </update>
</mapper>