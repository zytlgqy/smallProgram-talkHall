<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liu.smallProgram.talkHall.dao.CommentMessageHallMapper" >
  <resultMap id="BaseResultMap" type="com.liu.smallProgram.talkHall.model.CommentMessageHall" >
    <id column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="comment_speaker_id" property="commentSpeakerId" jdbcType="INTEGER" />
    <result column="message_id" property="messageId" jdbcType="INTEGER" />
    <result column="comment_content" property="commentContent" jdbcType="VARCHAR" />
    <result column="comment_state" property="commentState" jdbcType="INTEGER" />
    <result column="comment_images_ids" property="commentImagesIds" jdbcType="VARCHAR" />
    <result column="comment_father_id" property="commentFatherId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    comment_id, comment_speaker_id, message_id, comment_content, comment_state, comment_images_ids, 
    comment_father_id, create_time, last_update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment_message_hall
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment_message_hall
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liu.smallProgram.talkHall.model.CommentMessageHall" >
    insert into comment_message_hall (comment_id, comment_speaker_id, message_id, 
      comment_content, comment_state, comment_images_ids, 
      comment_father_id, create_time, last_update_time
      )
    values (#{commentId,jdbcType=INTEGER}, #{commentSpeakerId,jdbcType=INTEGER}, #{messageId,jdbcType=INTEGER}, 
      #{commentContent,jdbcType=VARCHAR}, #{commentState,jdbcType=INTEGER}, #{commentImagesIds,jdbcType=VARCHAR}, 
      #{commentFatherId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{lastUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liu.smallProgram.talkHall.model.CommentMessageHall" >
    insert into comment_message_hall
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="commentSpeakerId != null" >
        comment_speaker_id,
      </if>
      <if test="messageId != null" >
        message_id,
      </if>
      <if test="commentContent != null" >
        comment_content,
      </if>
      <if test="commentState != null" >
        comment_state,
      </if>
      <if test="commentImagesIds != null" >
        comment_images_ids,
      </if>
      <if test="commentFatherId != null" >
        comment_father_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentSpeakerId != null" >
        #{commentSpeakerId,jdbcType=INTEGER},
      </if>
      <if test="messageId != null" >
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentState != null" >
        #{commentState,jdbcType=INTEGER},
      </if>
      <if test="commentImagesIds != null" >
        #{commentImagesIds,jdbcType=VARCHAR},
      </if>
      <if test="commentFatherId != null" >
        #{commentFatherId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liu.smallProgram.talkHall.model.CommentMessageHall" >
    update comment_message_hall
    <set >
      <if test="commentSpeakerId != null" >
        comment_speaker_id = #{commentSpeakerId,jdbcType=INTEGER},
      </if>
      <if test="messageId != null" >
        message_id = #{messageId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null" >
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentState != null" >
        comment_state = #{commentState,jdbcType=INTEGER},
      </if>
      <if test="commentImagesIds != null" >
        comment_images_ids = #{commentImagesIds,jdbcType=VARCHAR},
      </if>
      <if test="commentFatherId != null" >
        comment_father_id = #{commentFatherId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liu.smallProgram.talkHall.model.CommentMessageHall" >
    update comment_message_hall
    set comment_speaker_id = #{commentSpeakerId,jdbcType=INTEGER},
      message_id = #{messageId,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_state = #{commentState,jdbcType=INTEGER},
      comment_images_ids = #{commentImagesIds,jdbcType=VARCHAR},
      comment_father_id = #{commentFatherId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>